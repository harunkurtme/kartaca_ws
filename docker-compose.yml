version: '3.4'

services:
  kartaca_ws:
    build:
      context: .
      dockerfile: ./Dockerfile
  pythonapp:
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.pythonapp.entrypoints=web"
    #   - "traefik.http.routers.pythonapp.rule=Host(`kartaca.localhost`) && Path(`/pythonapp`)"
    #   - "traefik.http.services.pythonapp.loadbalancer.server.port=4444"
    restart: always
    networks:
      - kartaca_net
    build:
      context: ./pythonapp
      dockerfile: ./Dockerfile
    ports:
      - "4444:4444"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
  goapp:
    restart: always
    networks:
      - kartaca_net
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.goapp.entrypoints=web"
    #   - "traefik.http.routers.goapp.rule=Host(`kartaca.localhost`) && Path(`/goapp`)"
    #   - "traefik.http.services.goapp.loadbalancer.server.port=5555"
    build:
      context: ./goapp  
      dockerfile: ./Dockerfile
    ports:
      - "5555:5555"
    depends_on:
      # - mongo
      - mongo1
      - mongo2
      - mongo3
  servis_gelistirme:
    build: 
      context: ./servis_gelistirme
      dockerfile: ./Dockerfile
  # mongo:
  #   image: mongo
  #   restart: always
  #   networks:
  #     - kartaca_net
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin
  #   ports:
  #     - "27017:27017"
  traefik:
    image: traefik
    networks:
      - kartaca_net
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=harunkurt0000@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--providers.file.filename=/etc/traefik/rules.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
      - "./traefik/rules.yml:/etc/traefik/rules.yml"
      - "./traefik/dashboard:/traefik"
  mongo1:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: stajdb
    networks:
      - kartaca_net
    command: mongod --replSet rs0 --bind_ip_all
  mongo2:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo2_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: stajdb
    networks:
      - kartaca_net
    command: mongod --replSet rs0 --bind_ip_all
  mongo3:
    image: mongo
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - mongo3_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: stajdb
    networks:
      - kartaca_net
    command: mongod --replSet rs0 --bind_ip_all

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  kartaca_net:
    driver: bridge