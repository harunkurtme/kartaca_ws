version: '3.4'

services:
  kartaca_ws:
    build:
      context: .
      dockerfile: ./Dockerfile
  pythonapp:
    restart: always
    networks:
      - kartaca_net
    build:
      context: ./pythonapp
      dockerfile: ./Dockerfile
    ports:
      - "4444:4444"
    # depends_on:
    #   - mongo1
    #   - mongo2
    #   - mongo3
  goapp:
    restart: always
    networks:
      - kartaca_net
    build:
      context: ./goapp  
      dockerfile: ./Dockerfile
    ports:
      - "5555:5555"
    # depends_on:
    #   - mongo1
    #   - mongo2
    #   - mongo3
  servis_gelistirme:
    build: 
      context: ./servis_gelistirme
      dockerfile: ./Dockerfile
  traefik:
    image: traefik
    networks:
      - kartaca_net
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=harunkurt0000@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--providers.file.filename=/etc/traefik/rules.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
      - "./traefik/rules.yml:/etc/traefik/rules.yml"
      - "./traefik/dashboard:/traefik"
  mongo1:
    image: mongo
    container_name: mongo-master
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mongo_network
    volumes:
      - ./data/mongo1:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # command: mongod --replSet rs0 --port 27017 --bind_ip_all --auth --init-script /docker-entrypoint-initdb.d/mongo-init.js
  mongo2:
    image: mongo
    container_name: mongo-slave1
    restart: always
    networks:
      - mongo_network
    ports:
      - "27018:27017"
    volumes:
      - ./data/mongo2:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # command: mongod --replSet rs0 --port 27017 --bind_ip_all --auth --init-script /docker-entrypoint-initdb.d/mongo-init.js
  mongo3:
    image: mongo
    container_name: mongo-slave2
    restart: always
    networks:
      - mongo_network
    ports:
      - "27019:27017"
    volumes:
      - ./data/mongo3:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # command: mongod --replSet rs0 --port 27017 --bind_ip_all --auth --init-script /docker-entrypoint-initdb.d/mongo-init.js




networks:
  kartaca_net:
    driver: bridge
  mongo_network:
    driver: bridge
  # mongo-file-replica-set:
  #   driver: bridge
  #   ipam:
  #     driver: default
  #     config:
  #       - subnet: 172.10.5.0/24
